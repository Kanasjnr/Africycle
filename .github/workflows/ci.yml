name: CI/CD Pipeline

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run linting
      run: yarn lint
    
    - name: Run smart contract tests with coverage
      run: yarn workspace @africycle/hardhat coverage
      env:
        COVERAGE_REPORT: true
    
    - name: Run frontend unit tests with coverage
      run: yarn workspace @africycle/react-app test:coverage
      env:
        CI: true
        NEXT_PUBLIC_CELO_NETWORK: alfajores
        NEXT_PUBLIC_CONTRACT_ADDRESS: "0x0000000000000000000000000000000000000000"
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./packages/react-app/coverage/lcov.info,./packages/hardhat/coverage/lcov.info
        flags: frontend,smart-contracts
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Build frontend
      run: yarn workspace @africycle/react-app build
      env:
        NEXT_PUBLIC_CELO_NETWORK: alfajores
        NEXT_PUBLIC_CONTRACT_ADDRESS: "0x0000000000000000000000000000000000000000"
    
    - name: Build smart contracts
      run: yarn workspace @africycle/hardhat compile

  e2e:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Install Playwright browsers
      run: yarn workspace @africycle/react-app playwright install --with-deps
    
    - name: Run E2E tests
      run: yarn workspace @africycle/react-app test:e2e
      env:
        CI: true
        NEXT_PUBLIC_CELO_NETWORK: alfajores
        NEXT_PUBLIC_CONTRACT_ADDRESS: "0x0000000000000000000000000000000000000000"
    
    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: playwright-report
        path: packages/react-app/playwright-report/
        retention-days: 30

  security:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    
    - name: Run npm audit
      run: yarn audit
    

    
    - name: Run Solhint for smart contract security
      run: yarn workspace @africycle/hardhat lint:solidity
    
    - name: Run Slither for smart contract analysis
      uses: crytic/slither-action@v0.2.0
      with:
        target: 'packages/hardhat/contracts'
        args: --print human-summary

  docker:
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build and test Docker images
      run: |
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml up -d
        sleep 30
        docker-compose -f docker-compose.yml down 